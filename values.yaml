# Default values for passbolt-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: passbolt/passbolt
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest-pro"

topologySpreadConstraints: []
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
podLabels: {}

# Passbolt configuration
passbolt:
  config:
    debug: false
    registration: false
    php:
      max_execution_time: 300
      memory_limit: "512M"
      post_max_size: "24M"
      upload_max_filesize: "24M"
      session:
        # Session liftime in seconds
        lifetime: 3600
        redis:
          # If you enable redis, you need to provide your own redis endpoint
          enabled: true
          #service: passbolt-redis-master
          service: passbolt-redis-cluster-headless
    salt: "your salt"
    gpgServerKeyFingerprint: "A3132A7FB02319AFC24E5605AEC2A8D23CE6DFEF"
    # serverkey_private:
    # serverkey:
    # jwtkey:
    # jwtcert:
    license:
      enabled: true
      # key:
    plugins:
      exportenabled: true
      importenabled: true
    email:
      enabled: false
      from: you@localhost
      host: localhost
      port: 25
      tls: false
      timeout: 30
      username: username
      password: password
    livenessProbe:
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
      initialDelaySeconds: 30
      timeoutSeconds: 10
    readinessProbe:
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
      initialDelaySeconds: 30
      timeoutSeconds: 10

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Database (dependency:mariadb)
mariadb:
  enabled: false
  ## @param architecture MariaDB architecture (`standalone` or `replication`)
  architecture: replication
  auth:
    rootPassword: "passboltmariadbrootpassword"
    database: "passboltmariadb"
    username: "passboltmariadbuser"
    password: "passboltmariadbpassword"

mariadb-galera:
  enabled: true
  rootUser:
    password: "passboltgalerarootpassword"
  galera:  
    mariabackup:
      password: "passboltgaleramariabackuppassword"
  db:
    user: "passboltgalerauser"
    password: "passboltgalerapassword"
    name: "passboltgaleradb"

redis:
  enabled: false
  auth:
    password: "redispassword"

redis-cluster:
  enabled: true
  password: "redisclusterpassword"

# Service
service:
  type: ClusterIP
  port: 80

podDisruptionBudget:
  enabled: false
  rule:
    type: minAvailable
    value: 1

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      scheme: http
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

